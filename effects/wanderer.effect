// multiple little runners, like in the beta
init:
  meta[1] = random8(); // R
  meta[2] = random8(); // G
  meta[3] = random8(); // B
  meta[4] = 0; // Current position
  // increment
  meta[5] = 1 + random8(4) / numPixels;
  // Reverse direction half the time.
  if(random8(2) == 0) meta[5] = -meta[5];

  meta[6] = random8(numPixels);
  meta[7] = random8(numPixels);
  meta[8] = random8(numPixels);
  meta[9] = random8(numPixels);
  meta[10] = random8(numPixels);
pixel:
  byte diff = numPixels;

  for (byte b=6; b <= 10; b++) {
    diff = min(
               diff,
               abs( i - (meta[b] + meta[4]) % numPixels )
              );
  }
  if (5 > diff) {
    *pixel = CRGB(
      (meta[1] * diff) >> 2,
      (meta[2] * diff) >> 2,
      (meta[3] * diff) >> 2
    );
  } else {
    *pixel = CRGB::Black;
  }


step:
  meta[4] += meta[5];
  if (meta[4] < 0) meta[4] += numPixels;

// vi:syntax=cpp
