// Wavy flag effect
setup:
  // Data for American-flag-like colors (20 pixels representing
  // blue field, stars and stripes).  This gets "stretched" as needed
  // to the full LED strip length in the flag effect code, below.
  // Can change this data to the colors of your own national flag,
  // favorite sports team colors, etc.  OK to change number of elements.
  CRGB flagTable[]  = {
    CRGB::Blue , CRGB::White, CRGB::Blue , CRGB::White, CRGB::Blue , CRGB::White, CRGB::Blue,
    CRGB::Red  , CRGB::White, CRGB::Red  , CRGB::White, CRGB::Red  , CRGB::White, CRGB::Red ,
    CRGB::White, CRGB::Red  , CRGB::White, CRGB::Red  , CRGB::White, CRGB::Red };
init:
  int i;
  meta[1] = 512 + random16(512); // Wavyness
  meta[2] = 4 + random8(10);    // Wave speed
  meta[3] = 200 + random8(200); // Wave 'puckeryness'
  meta[4] = 0;                 // Current  position
  for(meta[5]=0, i=0; i<numPixels-1; i++) {
    meta[5] += meta[3] + cos8(meta[4] + meta[1] *
      i / numPixels);
  } // sum
  meta[6] = -1; // some akkumulating sum
pixel:
  int idx1, idx2;
  fract8 a;
  long x;
  x = 256L * ((sizeof(flagTable) / 3) - 1) * meta[6] / meta[5];
  idx1 =  (x >> 8)      * 3;
  idx2 = ((x >> 8) + 1) * 3;
  a    = x & 255;
  *pixel = flagTable[idx2].lerp8(flagTable[idx1], a);
  meta[6] += meta[3] + cos8(meta[4] + meta[1] *
    i / numPixels);
step:
  meta[4] += meta[2];
  if(meta[4] >= 512) meta[4] -= 512;

// vi:syntax=cpp
