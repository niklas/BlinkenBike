a.map(&:sections) # precalc
.
.// Attribute Arrays
a.first.attribute_sections.each do |section|
  name    = a.func_array_name(section)
  content = a.map(&:"#{section}_attribute").join(',')
  typ     = a.class.attributes[section]
.PROGMEM const @{typ} @{name}[] = {@{content}};
end

.

a.each do |item|
  item.sections.each do |sec, code|
    case sec
    when 'setup'
# just outdent
.@{code.gsub(/^\s{2}/, '')}
    when *a.method_sections
    extra = sec == 'init' ? '  meta[0] = 1;' : ''
    fname = item.func_name(sec)
    fsign = item.signature_const(sec)
.void @{fname}(@{fsign}) {
.  @{code}
.  @{extra}
.};
    else
      raise "unknown section: #{sec}"
    end
  end
end

.
.// flash Arrays + Accessors
a.method_sections.each do |section|
  ftype = a.function_type_name(section)
  array = a.func_array_name(section)
  fname = a.func_array_accessor_name(section)
  aname = a.func_array_type_and_name(section)
.@{aname} [] PROGMEM = {
./!separate(", ")
a.by_auto.each do |item|
.@{item.func_name(section)}
end
.};
.@{ftype} @{fname}(byte i) { return (@{ftype}) pgm_read_word(&@{array}[i]); };
end
